{
  "swagger": "2.0",
  "basePath": "/",
  "paths": {
    "/v1/accounts": {
      "post": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "post_account_request",
        "tags": [
          "user_management"
        ]
      }
    },
    "/v1/accounts/contract": {
      "post": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "post_contract_request",
        "tags": [
          "user_management"
        ]
      }
    },
    "/v1/admin/users": {
      "post": {
        "responses": {
          "200": {
            "description": "\n    {\n        \"code\": 200,\n        \"error_msg\": \"\",\n        \"result\": \"User created successfully\",\n        \"page\": 1,\n        \"total\": 1,\n        \"num_of_pages\": 1\n    }\n    "
          }
        },
        "operationId": "post_create_user",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/create_user"
            }
          }
        ],
        "tags": [
          "user_management"
        ]
      }
    },
    "/v1/admin/users/email": {
      "get": {
        "responses": {
          "200": {
            "description": "\n    {\n        \"code\": 200,\n        \"error_msg\": \"\",\n        \"result\": {\n            'id': '9229f648-cfad-4851-8a3c-4b46b9d94d08',\n            'createdTimestamp': 1598365933269,\n            'username': 'samantha',\n            'enabled': True,\n            'email': 'test@test.com',\n            ......\n        },\n        \"page\": 1,\n        \"total\": 1,\n        \"num_of_pages\": 1\n    }\n    "
          }
        },
        "operationId": "get_get_user_by_email",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/get_user_email"
            }
          }
        ],
        "tags": [
          "user_management"
        ]
      }
    },
    "/v1/admin/users/group": {
      "post": {
        "responses": {
          "200": {
            "description": "\n    {\n        \"code\": 200,\n        \"error_msg\": \"\",\n        \"result\": \"success\",\n        \"page\": 1,\n        \"total\": 1,\n        \"num_of_pages\": 1\n    }\n    "
          }
        },
        "operationId": "post_user_group",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/user_group"
            }
          }
        ],
        "tags": [
          "user_management"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "\n    {\n        \"code\": 200,\n        \"error_msg\": \"\",\n        \"result\": \"success\",\n        \"page\": 1,\n        \"total\": 1,\n        \"num_of_pages\": 1\n    }\n    "
          }
        },
        "operationId": "delete_user_group",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/user_group"
            }
          }
        ],
        "tags": [
          "user_management"
        ]
      }
    },
    "/v1/admin/users/group/all": {
      "post": {
        "responses": {
          "200": {
            "description": "\n    {\n        \"code\": 200,\n        \"error_msg\": \"\",\n        \"result\": \"success\",\n        \"page\": 1,\n        \"total\": 1,\n        \"num_of_pages\": 1\n    }\n    "
          }
        },
        "summary": "Adds the give user to all existing groups in keycloak",
        "operationId": "post_user_group_all",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/user_group"
            }
          }
        ],
        "tags": [
          "user_management"
        ]
      }
    },
    "/v1/admin/users/group/sync": {
      "post": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "post_sync_group_trigger",
        "tags": [
          "user_management"
        ]
      }
    },
    "/v1/admin/users/project-role/all": {
      "post": {
        "responses": {
          "200": {
            "description": "\n    {\n        \"code\": 200,\n        \"error_msg\": \"\",\n        \"result\": \"success\",\n        \"page\": 1,\n        \"total\": 1,\n        \"num_of_pages\": 1\n    }\n    "
          }
        },
        "summary": "Adds the give user all admin project roles",
        "operationId": "post_user_project_role_all",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/user_group"
            }
          }
        ],
        "tags": [
          "user_management"
        ]
      }
    },
    "/v1/admin/users/realm-roles": {
      "post": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "post_realm_roles",
        "tags": [
          "user_management"
        ]
      }
    },
    "/v1/authorize": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "get_authorize",
        "tags": [
          "user_management"
        ]
      }
    },
    "/v1/user/account": {
      "put": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "put_user_management_v1",
        "tags": [
          "user_management"
        ]
      }
    },
    "/v1/user/ad-group": {
      "put": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "API for user ad group operations",
        "operationId": "put_user_ad_group_operations",
        "tags": [
          "user_management"
        ]
      }
    },
    "/v1/user/project-role": {
      "post": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "post_user_project_role",
        "tags": [
          "user_management"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "delete_user_project_role",
        "tags": [
          "user_management"
        ]
      }
    },
    "/v1/user/status": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "get_user_status",
        "tags": [
          "user_management"
        ]
      }
    },
    "/v1/users/auth": {
      "post": {
        "responses": {
          "200": {
            "description": "\n    {\n        \"code\": 200,\n        \"error_msg\": \"\",\n        \"result\": {\n            \"access_token\": \"nbR6F90TUfZGsr0fL9rFVd77n-EZziIlnDdz3AFVF_XmQ\",\n            \"expires_in\": 300,\n            \"refresh_expires_in\": 480,\n            \"refresh_token\": \"LbK6oDALEQuYCJA1STSFeTJy4\",\n            \"token_type\": \"bearer\",\n            \"not-before-policy\": 0,\n            \"session_state\": \"9bf0981a-2825-4e5c-8d50-73aa7bc83586\",\n            \"scope\": \"email profile\"\n        },\n        \"page\": 1,\n        \"total\": 1,\n        \"num_of_pages\": 1\n    }\n    "
          }
        },
        "operationId": "post_user_auth",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/query_payload_basic"
            }
          }
        ],
        "tags": [
          "user_management"
        ]
      }
    },
    "/v1/users/lastlogin": {
      "post": {
        "responses": {
          "200": {
            "description": {
              "result": "success"
            }
          }
        },
        "operationId": "post_user_last_login",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/query_payload_basic"
            }
          }
        ],
        "tags": [
          "user_management"
        ]
      }
    },
    "/v1/users/name": {
      "get": {
        "responses": {
          "200": {
            "description": "\n    {\n        \"code\": 200,\n        \"error_msg\": \"\",\n        \"result\": {\n            'id': '9229f648-cfad-4851-8a3c-4b46b9d94d08',\n            'createdTimestamp': 1598365933269,\n            'username': 'samantha',\n            'enabled': True,\n            ......\n        },\n        \"page\": 1,\n        \"total\": 1,\n        \"num_of_pages\": 1\n    }\n    "
          }
        },
        "operationId": "get_get_user_by_username",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/get_user_username"
            }
          }
        ],
        "tags": [
          "user_management"
        ]
      }
    },
    "/v1/users/refresh": {
      "post": {
        "responses": {
          "200": {
            "description": "\n    {\n        \"code\": 200,\n        \"error_msg\": \"\",\n        \"result\": {\n            \"access_token\": \"eyJhbGcgIYYWkp9uBHKQRqw\",\n            \"expires_in\": 300,\n            \"refresh_expires_in\": 480,\n            \"refresh_token\": \"OiJlbWFpbCBwcmZp6-xg4846zw4UJePZAzzAWI\",\n            \"token_type\": \"bearer\",\n            \"not-before-policy\": 0,\n            \"session_state\": \"9bf0981a-2825-4e5c-8d50-73aa7bc83586\",\n            \"scope\": \"email profile\"\n        },\n        \"page\": 1,\n        \"total\": 1,\n        \"num_of_pages\": 1\n    }\n    "
          }
        },
        "operationId": "post_user_refresh",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/user_refresh"
            }
          }
        ],
        "tags": [
          "user_management"
        ]
      }
    }
  },
  "info": {
    "title": "User management API",
    "version": "1.0",
    "description": "User API"
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "tags": [
    {
      "name": "user_management",
      "description": "Operation on users"
    }
  ],
  "definitions": {
    "query_payload_basic": {
      "properties": {
        "username": {
          "type": "string",
          "description": "username"
        }
      },
      "type": "object"
    },
    "user_refresh": {
      "properties": {
        "realm": {
          "type": "string",
          "description": "realm"
        },
        "refreshtoken": {
          "type": "string",
          "description": "refreshtoken"
        }
      },
      "type": "object"
    },
    "get_user_username": {
      "properties": {
        "realm": {
          "type": "string",
          "description": "realm"
        },
        "username": {
          "type": "string",
          "description": "username"
        },
        "invite_code": {
          "type": "string",
          "description": "invite_code"
        }
      },
      "type": "object"
    },
    "create_user": {
      "properties": {
        "realm": {
          "type": "string",
          "description": "realm"
        },
        "username": {
          "type": "string",
          "description": "username"
        },
        "password": {
          "type": "string",
          "description": "password"
        },
        "email": {
          "type": "string",
          "description": "email"
        },
        "firstname": {
          "type": "string",
          "description": "firstname"
        },
        "lastname": {
          "type": "string",
          "description": "lastname"
        }
      },
      "type": "object"
    },
    "get_user_email": {
      "properties": {
        "realm": {
          "type": "string",
          "description": "realm"
        },
        "email": {
          "type": "string",
          "description": "email"
        }
      },
      "type": "object"
    },
    "user_group": {
      "properties": {
        "realm": {
          "type": "string",
          "description": "realm"
        },
        "username": {
          "type": "string",
          "description": "username"
        }
      },
      "type": "object"
    }
  },
  "responses": {
    "ParseError": {
      "description": "When a mask can't be parsed"
    },
    "MaskError": {
      "description": "When any error occurs on mask"
    },
    "APIException": {}
  }
}
