{
  "openapi": "3.0.2",
  "info": {
    "title": "Service Provenance",
    "description": "Service Provenance",
    "version": "0.1.0"
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Root",
        "description": "For testing if service's up",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/v1/audit-logs": {
      "get": {
        "tags": [
          "Audit-logs"
        ],
        "summary": "Get audit logs",
        "operationId": "audit_log_query_v1_audit_logs_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "default": 0
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page Size",
              "type": "integer",
              "default": 10
            },
            "name": "page_size",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Sort By",
              "type": "string",
              "default": "createdTime"
            },
            "name": "sort_by",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Sort Type",
              "type": "string",
              "default": "desc"
            },
            "name": "sort_type",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Project Code",
              "type": "string"
            },
            "name": "project_code",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Action",
              "type": "string"
            },
            "name": "action",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Resource",
              "type": "string"
            },
            "name": "resource",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Operator",
              "type": "string"
            },
            "name": "operator",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Start Date",
              "type": "integer"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "End Date",
              "type": "integer"
            },
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Audit-logs"
        ],
        "summary": "Create an audit log for file operation",
        "operationId": "audit_log_creation_v1_audit_logs_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogCreation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/lineage/": {
      "get": {
        "tags": [
          "lineage"
        ],
        "summary": "Get Lineage",
        "description": "get lineage, query params: geid, direction defult(INPUT)",
        "operationId": "get_v1_lineage__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Geid",
              "type": "string"
            },
            "name": "geid",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Direction",
              "type": "string",
              "default": "INPUT"
            },
            "name": "direction",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GETLineageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "lineage"
        ],
        "summary": "POST Lineage",
        "description": "add new lineage to the metadata service by payload\n    {\n        'input_geid': '',\n        'output_geid': '',\n        'project_code': '',\n        'pipeline_name': '',\n        'description': '',\n    }",
        "operationId": "post_v1_lineage__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTLineage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/POSTLineageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/entity/file": {
      "get": {
        "tags": [
          "File Entity"
        ],
        "summary": "Search file entities in elastic search",
        "operationId": "file_meta_query_v1_entity_file_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Query",
              "type": "string"
            },
            "name": "query",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "default": 0
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page Size",
              "type": "integer",
              "default": 10
            },
            "name": "page_size",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Sort By",
              "type": "string",
              "default": "time_created"
            },
            "name": "sort_by",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Sort Type",
              "type": "string",
              "default": "desc"
            },
            "name": "sort_type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "File Entity"
        ],
        "summary": "Update a file entity in elastic search",
        "operationId": "file_meta_update_v1_entity_file_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileMetaUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "File Entity"
        ],
        "summary": "Create a file entity in elastic search",
        "operationId": "file_meta_creation_v1_entity_file_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileMetaCreation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/entity/file/search-rules": {
      "get": {
        "tags": [
          "File Entity"
        ],
        "summary": "Return searchable fileds",
        "operationId": "search_rules_v1_entity_file_search_rules_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuditLogCreation": {
        "title": "AuditLogCreation",
        "required": [
          "action",
          "operator",
          "target",
          "outcome",
          "resource",
          "display_name",
          "project_code",
          "extra"
        ],
        "type": "object",
        "properties": {
          "action": {
            "title": "Action",
            "type": "string"
          },
          "operator": {
            "title": "Operator",
            "type": "string"
          },
          "target": {
            "title": "Target",
            "type": "string"
          },
          "outcome": {
            "title": "Outcome",
            "type": "string"
          },
          "resource": {
            "title": "Resource",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "type": "string"
          },
          "project_code": {
            "title": "Project Code",
            "type": "string"
          },
          "extra": {
            "title": "Extra",
            "type": "object"
          }
        },
        "description": "Create an Audit Log"
      },
      "EAPIResponseCode": {
        "title": "EAPIResponseCode",
        "enum": [
          200,
          500,
          400,
          404,
          403,
          401,
          409
        ],
        "description": "An enumeration."
      },
      "FileMetaCreation": {
        "title": "FileMetaCreation",
        "required": [
          "global_entity_id",
          "operator",
          "zone",
          "file_size",
          "tags",
          "archived",
          "location",
          "time_lastmodified",
          "time_created",
          "process_pipeline",
          "uploader",
          "file_name",
          "atlas_guid",
          "display_path",
          "project_code"
        ],
        "type": "object",
        "properties": {
          "global_entity_id": {
            "title": "Global Entity Id",
            "type": "string"
          },
          "data_type": {
            "title": "Data Type",
            "type": "string",
            "default": "File"
          },
          "operator": {
            "title": "Operator",
            "type": "string"
          },
          "zone": {
            "title": "Zone",
            "type": "string"
          },
          "file_size": {
            "title": "File Size",
            "type": "integer"
          },
          "tags": {
            "title": "Tags",
            "type": "array",
            "items": {}
          },
          "archived": {
            "title": "Archived",
            "type": "boolean"
          },
          "location": {
            "title": "Location",
            "type": "string"
          },
          "time_lastmodified": {
            "title": "Time Lastmodified",
            "type": "integer"
          },
          "time_created": {
            "title": "Time Created",
            "type": "integer"
          },
          "process_pipeline": {
            "title": "Process Pipeline",
            "type": "string"
          },
          "uploader": {
            "title": "Uploader",
            "type": "string"
          },
          "file_name": {
            "title": "File Name",
            "type": "string"
          },
          "atlas_guid": {
            "title": "Atlas Guid",
            "type": "string"
          },
          "display_path": {
            "title": "Display Path",
            "type": "string"
          },
          "dcm_id": {
            "title": "Dcm Id",
            "type": "string"
          },
          "project_code": {
            "title": "Project Code",
            "type": "string"
          },
          "attributes": {
            "title": "Attributes",
            "type": "array",
            "items": {},
            "default": []
          },
          "priority": {
            "title": "Priority",
            "type": "integer",
            "default": 20
          },
          "version": {
            "title": "Version",
            "type": "string"
          }
        },
        "description": "Create a File Info"
      },
      "FileMetaUpdate": {
        "title": "FileMetaUpdate",
        "required": [
          "global_entity_id",
          "updated_fields"
        ],
        "type": "object",
        "properties": {
          "global_entity_id": {
            "title": "Global Entity Id",
            "type": "string"
          },
          "updated_fields": {
            "title": "Updated Fields",
            "type": "object"
          }
        },
        "description": "Update a File Info"
      },
      "GETLineageResponse": {
        "title": "GETLineageResponse",
        "type": "object",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EAPIResponseCode"
              }
            ],
            "default": 200
          },
          "error_msg": {
            "title": "Error Msg",
            "type": "string",
            "default": ""
          },
          "page": {
            "title": "Page",
            "type": "integer",
            "default": 0
          },
          "total": {
            "title": "Total",
            "type": "integer",
            "default": 1
          },
          "num_of_pages": {
            "title": "Num Of Pages",
            "type": "integer",
            "default": 1
          },
          "result": {
            "title": "Result",
            "type": "object",
            "default": {},
            "example": {
              "code": 200,
              "error_msg": "",
              "page": 0,
              "total": 1,
              "num_of_pages": 1,
              "result": []
            }
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "POSTLineage": {
        "title": "POSTLineage",
        "required": [
          "input_geid",
          "output_geid",
          "project_code",
          "pipeline_name",
          "description"
        ],
        "type": "object",
        "properties": {
          "input_geid": {
            "title": "Input Geid",
            "type": "string"
          },
          "output_geid": {
            "title": "Output Geid",
            "type": "string"
          },
          "project_code": {
            "title": "Project Code",
            "type": "string"
          },
          "pipeline_name": {
            "title": "Pipeline Name",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          }
        }
      },
      "POSTLineageResponse": {
        "title": "POSTLineageResponse",
        "type": "object",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EAPIResponseCode"
              }
            ],
            "default": 200
          },
          "error_msg": {
            "title": "Error Msg",
            "type": "string",
            "default": ""
          },
          "page": {
            "title": "Page",
            "type": "integer",
            "default": 0
          },
          "total": {
            "title": "Total",
            "type": "integer",
            "default": 1
          },
          "num_of_pages": {
            "title": "Num Of Pages",
            "type": "integer",
            "default": 1
          },
          "result": {
            "title": "Result",
            "type": "object",
            "default": {},
            "example": {
              "code": 200,
              "error_msg": "",
              "page": 0,
              "total": 1,
              "num_of_pages": 1,
              "result": []
            }
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    }
  }
}
