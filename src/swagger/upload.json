{
  "openapi": "3.0.2",
  "info": {
    "title": "Service Data Upload",
    "description": "Service for data upload usage",
    "version": "0.2.3"
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Root",
        "description": "Healthcheck route.",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/v1/files/jobs": {
      "get": {
        "tags": [
          "V1 Upload"
        ],
        "summary": "get upload job status",
        "description": "This method allow to check file upload status",
        "operationId": "get_status_v1_files_jobs_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Project Code"
            },
            "name": "project_code",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Operator"
            },
            "name": "operator",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Session-Id",
              "type": "string"
            },
            "name": "session-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GETJobStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "V1 Upload"
        ],
        "summary": "Always would be called first when upload,                  Init an async upload job, returns generated job identifier.",
        "description": "This method allow to create an async upload job",
        "operationId": "upload_pre_v1_files_jobs_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Session-Id"
            },
            "name": "session-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreUploadPOST"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreUploadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "V1 Upload"
        ],
        "summary": "Delete the upload job status.",
        "description": "delete status by session id",
        "operationId": "clear_status_v1_files_jobs_delete",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Session-Id",
              "type": "string"
            },
            "name": "session-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/files/chunks": {
      "post": {
        "tags": [
          "V1 Upload"
        ],
        "summary": "upload chunks process.",
        "description": "This method allow to upload file chunks",
        "operationId": "upload_chunks_v1_files_chunks_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Session-Id",
              "type": "string"
            },
            "name": "session-id",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_chunks_v1_files_chunks_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChunkUploadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/files": {
      "post": {
        "tags": [
          "V1 Upload"
        ],
        "summary": "create a background worker to combine chunks, transfer file to the destination namespace",
        "description": "This method allow to create a background worker to combine chunks uploaded",
        "operationId": "on_success_v1_files_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Session-Id",
              "type": "string"
            },
            "name": "session-id",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "Authorization",
              "type": "string"
            },
            "name": "Authorization",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "Refresh-Token",
              "type": "string"
            },
            "name": "refresh-token",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnSuccessUploadPOST"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/POSTCombineChunksResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/folder/bulk": {
      "post": {
        "tags": [
          "V1 Folder creation"
        ],
        "summary": "This API is to bulk create a folder in the target destination",
        "operationId": "bulk_create_folder_v2_v1_folder_bulk_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkCreateFolderPOSTV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFolderPOSTResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/folder/batch": {
      "post": {
        "tags": [
          "V1 Folder creation"
        ],
        "summary": "This API is to bulk create a folder in the target destination",
        "operationId": "bulk_create_folder_v1_folder_batch_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkCreateFolderPOST"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFolderPOSTResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/folder": {
      "post": {
        "tags": [
          "V1 Folder creation"
        ],
        "summary": "This API is to create a folder in the target destination",
        "description": "create folder / sub folder",
        "operationId": "create_folder_v1_folder_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFolderPOST"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFolderPOSTResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_upload_chunks_v1_files_chunks_post": {
        "title": "Body_upload_chunks_v1_files_chunks_post",
        "required": [
          "project_code",
          "operator",
          "resumable_identifier",
          "resumable_filename",
          "resumable_chunk_number",
          "resumable_total_chunks",
          "resumable_total_size",
          "chunk_data"
        ],
        "type": "object",
        "properties": {
          "project_code": {
            "title": "Project Code",
            "type": "string"
          },
          "operator": {
            "title": "Operator",
            "type": "string"
          },
          "resumable_identifier": {
            "title": "Resumable Identifier",
            "type": "string"
          },
          "resumable_filename": {
            "title": "Resumable Filename",
            "type": "string"
          },
          "resumable_relative_path": {
            "title": "Resumable Relative Path",
            "type": "string",
            "default": ""
          },
          "resumable_chunk_number": {
            "title": "Resumable Chunk Number",
            "type": "integer"
          },
          "resumable_total_chunks": {
            "title": "Resumable Total Chunks",
            "type": "integer"
          },
          "resumable_total_size": {
            "title": "Resumable Total Size",
            "type": "integer"
          },
          "tags": {
            "title": "Tags",
            "type": "array",
            "items": {},
            "default": []
          },
          "generate_id": {
            "title": "Generate Id",
            "type": "string",
            "default": "undefined"
          },
          "chunk_data": {
            "title": "Chunk Data",
            "type": "string",
            "format": "binary"
          }
        }
      },
      "BulkCreateFolderPOST": {
        "title": "BulkCreateFolderPOST",
        "required": [
          "folder_name",
          "zone",
          "uploader"
        ],
        "type": "object",
        "properties": {
          "folder_name": {
            "title": "Folder Name",
            "type": "string"
          },
          "destination_geid": {
            "title": "Destination Geid",
            "type": "string"
          },
          "zone": {
            "title": "Zone",
            "type": "string"
          },
          "project_code_list": {
            "title": "Project Code List",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "uploader": {
            "title": "Uploader",
            "type": "string"
          },
          "tags": {
            "title": "Tags",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          }
        },
        "description": "create folder request payload model"
      },
      "BulkCreateFolderPOSTV2": {
        "title": "BulkCreateFolderPOSTV2",
        "required": [
          "zone"
        ],
        "type": "object",
        "properties": {
          "zone": {
            "title": "Zone",
            "type": "string"
          },
          "folders": {
            "title": "Folders",
            "type": "array",
            "items": {
              "type": "object"
            },
            "default": []
          }
        },
        "description": "create folder request payload model"
      },
      "ChunkUploadResponse": {
        "title": "ChunkUploadResponse",
        "type": "object",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EAPIResponseCode"
              }
            ],
            "default": 200
          },
          "error_msg": {
            "title": "Error Msg",
            "type": "string",
            "default": ""
          },
          "page": {
            "title": "Page",
            "type": "integer",
            "default": 0
          },
          "total": {
            "title": "Total",
            "type": "integer",
            "default": 1
          },
          "num_of_pages": {
            "title": "Num Of Pages",
            "type": "integer",
            "default": 1
          },
          "result": {
            "title": "Result",
            "type": "object",
            "default": {},
            "example": {
              "msg": "Succeed"
            }
          }
        },
        "description": "Pre upload response class"
      },
      "CreateFolderPOST": {
        "title": "CreateFolderPOST",
        "required": [
          "folder_name",
          "destination_geid",
          "project_code",
          "uploader"
        ],
        "type": "object",
        "properties": {
          "folder_name": {
            "title": "Folder Name",
            "type": "string"
          },
          "destination_geid": {
            "title": "Destination Geid",
            "type": "string"
          },
          "zone": {
            "title": "Zone",
            "type": "string",
            "default": "greenroom"
          },
          "project_code": {
            "title": "Project Code",
            "type": "string"
          },
          "uploader": {
            "title": "Uploader",
            "type": "string"
          },
          "tags": {
            "title": "Tags",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          }
        },
        "description": "create folder request payload model"
      },
      "CreateFolderPOSTResponse": {
        "title": "CreateFolderPOSTResponse",
        "type": "object",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EAPIResponseCode"
              }
            ],
            "default": 200
          },
          "error_msg": {
            "title": "Error Msg",
            "type": "string",
            "default": ""
          },
          "page": {
            "title": "Page",
            "type": "integer",
            "default": 0
          },
          "total": {
            "title": "Total",
            "type": "integer",
            "default": 1
          },
          "num_of_pages": {
            "title": "Num Of Pages",
            "type": "integer",
            "default": 1
          },
          "result": {
            "title": "Result",
            "type": "object",
            "default": {},
            "example": {
              "code": 200,
              "error_msg": "",
              "page": 0,
              "total": 1,
              "num_of_pages": 1,
              "result": {
                "id": 10170,
                "labels": [
                  "Folder",
                  "Greenroom"
                ],
                "name": "test1",
                "time_created": "2021-05-05T22:33:49",
                "time_lastmodified": "2021-05-05T22:33:49",
                "global_entity_id": "9491b055-4c63-4987-9e1a-778dcec699ec-1620254029",
                "folder_level": 1,
                "folder_relative_path": "",
                "project_code": "04142",
                "tags": [],
                "list_priority": 10,
                "uploader": "varsha"
              }
            }
          }
        },
        "description": "Response model for folder creation POST request"
      },
      "EAPIResponseCode": {
        "title": "EAPIResponseCode",
        "enum": [
          200,
          500,
          400,
          404,
          403,
          401,
          409
        ],
        "description": "An enumeration."
      },
      "GETJobStatusResponse": {
        "title": "GETJobStatusResponse",
        "type": "object",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EAPIResponseCode"
              }
            ],
            "default": 200
          },
          "error_msg": {
            "title": "Error Msg",
            "type": "string",
            "default": ""
          },
          "page": {
            "title": "Page",
            "type": "integer",
            "default": 0
          },
          "total": {
            "title": "Total",
            "type": "integer",
            "default": 1
          },
          "num_of_pages": {
            "title": "Num Of Pages",
            "type": "integer",
            "default": 1
          },
          "result": {
            "title": "Result",
            "type": "object",
            "default": {},
            "example": [
              {
                "session_id": "unique_session",
                "job_id": "upload-0a572418-7c2b-11eb-8428-be498ca98c54-1614780986",
                "source": "<path>",
                "action": "data_upload",
                "status": "PRE_UPLOADED | SUCCEED",
                "project_code": "em0301",
                "operator": "zhengyang",
                "progress": 0,
                "payload": {
                  "resumable_identifier": "upload-0a572418-7c2b-11eb-8428-be498ca98c54-1614780986",
                  "parent_folder_geid": "1e3fa930-8b41-11eb-845f-eaff9e667817-1616439736"
                },
                "update_timestamp": "1614780986"
              }
            ]
          }
        },
        "description": "get Job status response class"
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "OnSuccessUploadPOST": {
        "title": "OnSuccessUploadPOST",
        "required": [
          "project_code",
          "operator",
          "resumable_identifier",
          "resumable_filename",
          "resumable_relative_path",
          "resumable_total_chunks",
          "resumable_total_size"
        ],
        "type": "object",
        "properties": {
          "project_code": {
            "title": "Project Code",
            "type": "string"
          },
          "operator": {
            "title": "Operator",
            "type": "string"
          },
          "resumable_identifier": {
            "title": "Resumable Identifier",
            "type": "string"
          },
          "resumable_filename": {
            "title": "Resumable Filename",
            "type": "string"
          },
          "resumable_relative_path": {
            "title": "Resumable Relative Path",
            "type": "string"
          },
          "resumable_total_chunks": {
            "title": "Resumable Total Chunks",
            "type": "integer"
          },
          "resumable_total_size": {
            "title": "Resumable Total Size",
            "type": "number"
          },
          "tags": {
            "title": "Tags",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "generate_id": {
            "title": "Generate Id",
            "type": "string",
            "default": "undefined"
          },
          "metadatas": {
            "title": "Metadatas",
            "type": "object"
          },
          "process_pipeline": {
            "title": "Process Pipeline",
            "type": "string"
          },
          "from_parents": {
            "title": "From Parents",
            "type": "array",
            "items": {}
          },
          "upload_message": {
            "title": "Upload Message",
            "type": "string",
            "default": ""
          }
        },
        "description": "merge chunks payload model"
      },
      "POSTCombineChunksResponse": {
        "title": "POSTCombineChunksResponse",
        "type": "object",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EAPIResponseCode"
              }
            ],
            "default": 200
          },
          "error_msg": {
            "title": "Error Msg",
            "type": "string",
            "default": ""
          },
          "page": {
            "title": "Page",
            "type": "integer",
            "default": 0
          },
          "total": {
            "title": "Total",
            "type": "integer",
            "default": 1
          },
          "num_of_pages": {
            "title": "Num Of Pages",
            "type": "integer",
            "default": 1
          },
          "result": {
            "title": "Result",
            "type": "object",
            "default": {},
            "example": {
              "session_id": "unique_session",
              "job_id": "upload-0a572418-7c2b-11eb-8428-be498ca98c54-1614780986",
              "source": "<path>",
              "action": "data_upload",
              "status": "PRE_UPLOADED | SUCCEED",
              "project_code": "em0301",
              "operator": "zhengyang",
              "progress": 0,
              "payload": {
                "resumable_identifier": "upload-0a572418-7c2b-11eb-8428-be498ca98c54-1614780986",
                "parent_folder_geid": "1e3fa930-8b41-11eb-845f-eaff9e667817-1616439736"
              },
              "update_timestamp": "1614780986"
            }
          }
        },
        "description": "get Job status response class"
      },
      "PreUploadPOST": {
        "title": "PreUploadPOST",
        "required": [
          "project_code",
          "operator",
          "data"
        ],
        "type": "object",
        "properties": {
          "project_code": {
            "title": "Project Code",
            "type": "string"
          },
          "operator": {
            "title": "Operator",
            "type": "string"
          },
          "job_type": {
            "title": "Job Type",
            "type": "string",
            "default": "AS_FOLDER | AS_FILE"
          },
          "folder_tags": {
            "title": "Folder Tags",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SingleFileForm"
            }
          },
          "upload_message": {
            "title": "Upload Message",
            "type": "string",
            "default": ""
          },
          "current_folder_node": {
            "title": "Current Folder Node",
            "type": "string",
            "default": ""
          },
          "incremental": {
            "title": "Incremental",
            "type": "boolean",
            "default": false
          }
        },
        "description": "Pre upload payload model"
      },
      "PreUploadResponse": {
        "title": "PreUploadResponse",
        "type": "object",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EAPIResponseCode"
              }
            ],
            "default": 200
          },
          "error_msg": {
            "title": "Error Msg",
            "type": "string",
            "default": ""
          },
          "page": {
            "title": "Page",
            "type": "integer",
            "default": 0
          },
          "total": {
            "title": "Total",
            "type": "integer",
            "default": 1
          },
          "num_of_pages": {
            "title": "Num Of Pages",
            "type": "integer",
            "default": 1
          },
          "result": {
            "title": "Result",
            "type": "object",
            "default": {},
            "example": [
              {
                "session_id": "unique_session_2021",
                "job_id": "1bfe8fd8-8b41-11eb-a8bd-eaff9e667817-1616439732",
                "source": "file1.png",
                "action": "data_upload",
                "status": "PRE_UPLOADED",
                "project_code": "gregtest",
                "operator": "zhengyang",
                "progress": 0,
                "payload": {
                  "resumable_identifier": "1bfe8fd8-8b41-11eb-a8bd-eaff9e667817-1616439732",
                  "parent_folder_geid": "1bcbe182-8b41-11eb-bf7a-eaff9e667817-1616439732"
                },
                "update_timestamp": "1616439731"
              },
              {
                "session_id": "unique_session_2021",
                "job_id": "1c90ceac-8b41-11eb-bf7a-eaff9e667817-1616439733",
                "source": "a/b/file1.png",
                "action": "data_upload",
                "status": "PRE_UPLOADED",
                "project_code": "gregtest",
                "operator": "zhengyang",
                "progress": 0,
                "payload": {
                  "resumable_identifier": "1c90ceac-8b41-11eb-bf7a-eaff9e667817-1616439733",
                  "parent_folder_geid": "1c67ba8a-8b41-11eb-845f-eaff9e667817-1616439733"
                },
                "update_timestamp": "1616439732"
              },
              {
                "session_id": "unique_session_2021",
                "job_id": "1cfd235e-8b41-11eb-a8bd-eaff9e667817-1616439734",
                "source": "a/b/c/file2.png",
                "action": "data_upload",
                "status": "PRE_UPLOADED",
                "project_code": "gregtest",
                "operator": "zhengyang",
                "progress": 0,
                "payload": {
                  "resumable_identifier": "1cfd235e-8b41-11eb-a8bd-eaff9e667817-1616439734",
                  "parent_folder_geid": "1cd44d62-8b41-11eb-8a88-eaff9e667817-1616439733"
                },
                "update_timestamp": "1616439733"
              },
              {
                "session_id": "unique_session_2021",
                "job_id": "1d4696f6-8b41-11eb-8a88-eaff9e667817-1616439734",
                "source": "a/b/c/file3.png",
                "action": "data_upload",
                "status": "PRE_UPLOADED",
                "project_code": "gregtest",
                "operator": "zhengyang",
                "progress": 0,
                "payload": {
                  "resumable_identifier": "1d4696f6-8b41-11eb-8a88-eaff9e667817-1616439734",
                  "parent_folder_geid": "1cd44d62-8b41-11eb-8a88-eaff9e667817-1616439733"
                },
                "update_timestamp": "1616439733"
              },
              {
                "session_id": "unique_session_2021",
                "job_id": "1daf9192-8b41-11eb-8a88-eaff9e667817-1616439735",
                "source": "a/b/c/d/file4.png",
                "action": "data_upload",
                "status": "PRE_UPLOADED",
                "project_code": "gregtest",
                "operator": "zhengyang",
                "progress": 0,
                "payload": {
                  "resumable_identifier": "1daf9192-8b41-11eb-8a88-eaff9e667817-1616439735",
                  "parent_folder_geid": "1d8a22cc-8b41-11eb-a8bd-eaff9e667817-1616439734"
                },
                "update_timestamp": "1616439734"
              },
              {
                "session_id": "unique_session_2021",
                "job_id": "1e662e20-8b41-11eb-8a88-eaff9e667817-1616439736",
                "source": "a/e/c/d/file4.png",
                "action": "data_upload",
                "status": "PRE_UPLOADED",
                "project_code": "gregtest",
                "operator": "zhengyang",
                "progress": 0,
                "payload": {
                  "resumable_identifier": "1e662e20-8b41-11eb-8a88-eaff9e667817-1616439736",
                  "parent_folder_geid": "1e3fa930-8b41-11eb-845f-eaff9e667817-1616439736"
                },
                "update_timestamp": "1616439735"
              }
            ]
          }
        },
        "description": "Pre upload response class"
      },
      "SingleFileForm": {
        "title": "SingleFileForm",
        "required": [
          "resumable_filename"
        ],
        "type": "object",
        "properties": {
          "resumable_filename": {
            "title": "Resumable Filename",
            "type": "string"
          },
          "resumable_relative_path": {
            "title": "Resumable Relative Path",
            "type": "string",
            "default": ""
          },
          "generate_id": {
            "title": "Generate Id",
            "type": "string",
            "default": "undefined"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    }
  }
}
